name: Debug Build
run-name: Building debug version
on:
  workflow_dispatch:
    inputs:
      job_target:
        description: "Select the platform"
        required: true
        default: "Both"
        type: choice
        options:
          - Both
          - Windows
          - Linux

env:
  GODOT_VERSION: 4.4
  GODOT_PROJECT_LOCATION: simon/project.godot
  EXPORT_FOLDER_WINDOWS: bin/Windows
  EXPORT_FOLDER_LINUX: bin/Linux
  APPLICATION_NAME: Simon

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Setting extra variables
        run: |
          echo "DATE=$(date + '%Y-%m-%d')" >> $GITHUB_ENV
          echo "MAIN_FOLDER=$(pwd)" >> $GITHUB_ENV

      - name: Install dependencies
        run: pacman -Syu --noconfirm git bash yasm python python-pip scons gcc diffutils make wget unzip tar mingw-w64

      - name: Checkout submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Prepare Godot
        run: |
          wget -q -O godot_linux.zip https://github.com/godotengine/godot-builds/releases/download/${{ env.GODOT_VERSION }}-stable/Godot_v${{ env.GODOT_VERSION }}-stable_linux.x86_64.zip
          unzip godot_linux.zip
          wget -q -O godot_export_templates.tpz https://github.com/godotengine/godot-builds/releases/download/${{ env.GODOT_VERSION }}-stable/Godot_v${{ env.GODOT_VERSION }}-stable_export_templates.tpz
          mkdir -p ~/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.stable
          unzip godot_export_templates.tpz -d ~/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.stable
          mv ~/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.stable/templates/* ~/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}.stable
          sed -i 's/config\/version="[^"]*"/config\/version=${{ env.DATE }}-debug"/' ${{ env.GODOT_PROJECT_LOCATION }}

      - name: Build debug for Linux
        if: ${{ github.event.inputs.job_target == 'Linux' || github.event.inputs.job_target == 'Both' }}
        run: |
          mkdir -p ${{ env.EXPORT_FOLDER_LINUX }}
          ./Godot_v${{ env.GODOT_VERSION }}-stable_linux.x86_64 --import ${{ env.GODOT_PROJECT_LOCATION }} --quiet --headless --export-debug Linux ${{ env.MAIN_FOLDER }}/${{ env.EXPORT_FOLDER_LINUX }}/${{ env.APPLICATION_NAME }}.x86_64
          chmod +x ${{ env.EXPORT_FOLDER_LINUX }}/${{ env.APPLICATION_NAME }}.sh
          chmod +x ${{ env.EXPORT_FOLDER_LINUX }}/${{ env.APPLICATION_NAME }}.x86_64

      - name: Make tar Files
        if: ${{ github.event.inputs.job_target == 'Linux' || github.event.inputs.job_target == 'Both' }}
        run: tar -cvf ${{ env.APPLICATION_NAME }}_linux_debug_${{ env.DATE }}.tar ${{ env.EXPORT_FOLDER_LINUX }}
      
      - name: Upload GDExtension debug artifact
        if: ${{ github.event.inputs.job_target == 'Linux' || github.event.inputs.job_target == 'Both' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APPLICATION_NAME }}_linux_debug_${{ env.DATE }}.tar
          path: ${{ env.APPLICATION_NAME }}_linux_debug_${{ env.DATE }}.tar
        
      - name: Build debug for Windows
        if: ${{ github.event.inputs.job_target == 'Windows' || github.event.inputs.job_target == 'Both' }}
        run: |
          mkdir -p ${{ env.EXPORT_FOLDER_WINDOWS }}
          ./Godot_v${{ env.GODOT_VERSION }}-stable_linux.x86_64 --import ${{ env.GODOT_PROJECT_LOCATION }} --quiet --headless --export-debug Windows ${{ env.MAIN_FOLDER }}/${{ env.EXPORT_FOLDER_WINDOWS }}/${{ env.APPLICATION_NAME }}.exe

      - name: Upload GDExtension debug artifact
        if: ${{ github.event.inputs.job_target == 'Windows' || github.event.inputs.job_target == 'Both' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APPLICATION_NAME }}_windows_debug_${{ env.DATE }}
          path: ${{ env.EXPORT_FOLDER_WINDOWS }}/